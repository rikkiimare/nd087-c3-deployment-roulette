# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
commands:
  print_pipeline_id:
    parameters:
      id:
        type: string
    steps:
      - run: echo << parameters.id >>

jobs:
  myjob:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id:
            id: << pipeline.id >>

  trigger:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: exit 1
      - run:
          name: OMG we've had a failure
          command: echo "hello imperfect world"
          when: on_fail

      # - run:
        #   name: Testing application
        #   command: make test
        #   shell: /bin/bash
        #   working_directory: ~/my-app
        #   no_output_timeout: 30m
        #   environment:
        #     FOO: bar

      # - run: echo 127.0.0.1 devhost | sudo tee -a /etc/hosts

      # - run: |
      #     sudo -u root createuser -h localhost --superuser ubuntu &&
      #     sudo createdb -h localhost test_db

      # - run:
      #     name: Upload Failed Tests
      #     command: curl --data fail_tests.log http://example.com/error_logs
      #     when: on_fail  

  # save_hello_world_output:
  #   # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
  #   docker:
  #     - image: circleci/node:13.8.0
  #   # Add steps to the job
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#steps
  #   steps:
  #     - checkout
  #     - run:
  #         name: "print hello"
  #         command: echo "hello world" > ~/output.txt
  #     - persist_to_workspace:
  #         root: ~/
  #         paths:
  #           - output.txt
  
  # print_output_file:
  #   # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
  #   docker:
  #     - image: circleci/node:13.8.0
  #   # Add steps to the job
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#steps
  #   steps:
  #     - attach_workspace:
  #         at: ~/
  #     - run: cat ~/output.txt
          
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - trigger
